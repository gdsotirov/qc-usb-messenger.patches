diff -N -r -U 3 qc-usb-messenger-1.8/Makefile qc-usb-messenger-1.8-orig/Makefile
--- qc-usb-messenger-1.8/Makefile	2010-07-16 15:02:15.000000000 +0300
+++ qc-usb-messenger-1.8-orig/Makefile	2008-05-26 14:24:36.000000000 +0300
@@ -65,7 +65,7 @@
 	fi)
 
 ifndef USER_OPT
-USER_OPT := -I$(LINUX_DIR) -DHAVE_UTSRELEASE_H=$(HAVE_UTSRELEASE_H)
+USER_OPT := -DHAVE_UTSRELEASE_H=$(HAVE_UTSRELEASE_H)
 else
 USER_OPT := $(USER_OPT) -DHAVE_UTSRELEASE_H=$(HAVE_UTSRELEASE_H)
 endif
@@ -131,7 +131,7 @@
 else
 # No, 2.4.x or older
 
-MODULE_INC    := -I$(LINUX_DIR) -I$(LINUX_DIR)/include -nostdinc -iwithprefix include
+MODULE_INC    := -I$(LINUX_DIR)/include -nostdinc -iwithprefix include
 MODULE_DEF    := -DMODULE -D__KERNEL__ -DNOKERNEL
 MODULE_OPT    := -O2 -fomit-frame-pointer -fno-strict-aliasing -fno-common
 MODULE_WARN   := -Wall -Wstrict-prototypes -Wno-trigraphs
diff -N -r -U 3 qc-usb-messenger-1.8/qc-driver.c qc-usb-messenger-1.8-orig/qc-driver.c
--- qc-usb-messenger-1.8/qc-driver.c	2010-07-16 14:45:30.000000000 +0300
+++ qc-usb-messenger-1.8-orig/qc-driver.c	2008-05-26 14:29:16.000000000 +0300
@@ -49,11 +49,10 @@
 #include <linux/quickcam.h>
 #endif
 #include <linux/version.h>
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,32))
-#include <generated/utsrelease.h>
-#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,18)) && (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,32))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,18)) || (HAVE_UTSRELEASE_H == 1)
 #include <linux/utsrelease.h>
 #endif
+#include <linux/autoconf.h>
 #include <linux/module.h>
 
 #include "qc-memory.h"
@@ -1125,7 +1124,7 @@
 		PRINTK(KERN_WARNING,"Could not register procfs file entry");
 		return -ENXIO;
 	}
-	/*entry->owner = THIS_MODULE;*/
+	entry->owner = THIS_MODULE;
 	entry->data = qc;
 	entry->read_proc = qc_proc_read;
 	entry->write_proc = qc_proc_write;
@@ -1138,7 +1137,7 @@
 		PRINTK(KERN_WARNING,"Could not register procfs file entry");
 		return -ENXIO;
 	}
-	/*entry->owner = THIS_MODULE;*/
+	entry->owner = THIS_MODULE;
 	entry->data = qc;
 	entry->read_proc = qc_proc_button_read;
 	entry->write_proc = qc_proc_write;
@@ -1180,13 +1179,13 @@
 		PRINTK(KERN_WARNING,"Could not register procfs dir entry");
 		return -ENXIO;
 	}
-	/*qc_proc_video_entry->owner = THIS_MODULE;*/
+	qc_proc_video_entry->owner = THIS_MODULE;
 	qc_proc_quickcam_entry = create_proc_entry(qc_proc_quickcam_name, S_IFDIR, qc_proc_video_entry);
 	if (!qc_proc_quickcam_entry) {
 		PRINTK(KERN_WARNING,"Could not register procfs dir entry");
 		return -ENXIO;
 	}
-	/*qc_proc_quickcam_entry->owner = THIS_MODULE;*/
+	qc_proc_quickcam_entry->owner = THIS_MODULE;
 	return 0;
 }
 /* }}} */
@@ -2487,7 +2486,7 @@
 		}
 
 		if (qc->settings.adaptive && !qc->sensor_data.sensor->autoexposure && r>=0 && midvalue>=0) {
-			int ex = 0, gn = 0;
+			int ex, gn;
 			qc_adapt(qc, midvalue, qc->vpic.brightness>>8, &ex, &gn);
 			qc->sensor_data.sensor->set_levels(qc, ex, gn, qc->vpic.hue, qc->vpic.colour);
 			if(qc->settings.shutteradapt)
@@ -2623,11 +2622,7 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 	struct video_device *dev = video_devdata(file);
 #endif
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
-	struct quickcam *qc = (struct quickcam *)video_get_drvdata(dev);
-#else
 	struct quickcam *qc = (struct quickcam *)dev->priv;
-#endif
 	struct qc_frame_data *fd = &qc->frame_data;
 	int mask;
 
@@ -2670,9 +2665,7 @@
 }
 /* }}} */
 /* {{{ [fold] qc_v4l_open(struct video_device *dev, int flags) */
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,30)
-static int qc_v4l_open(struct file *file)
-#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 static int qc_v4l_open(struct inode *inode, struct file *file)
 #else
 static int qc_v4l_open(struct video_device *dev, int flags)
@@ -2681,11 +2674,7 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 	struct video_device *dev = video_devdata(file);
 #endif
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
-	struct quickcam *qc = (struct quickcam *)video_get_drvdata(dev);
-#else
-	struct quickcam *qc = (struct quickcam *)dev->priv;
-#endif
+	struct quickcam *qc = dev->priv;
 	int r;
 
 	if (qcdebug&QC_DEBUGLOGIC || qcdebug&QC_DEBUGUSER) PDEBUG("qc_v4l_open(qc=%p)", qc);
@@ -2741,9 +2730,7 @@
 }
 /* }}} */
 /* {{{ [fold] qc_v4l_close(struct video_device *dev) */
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,30)
-static int qc_v4l_close(struct file *file)
-#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 static int qc_v4l_close(struct inode *inode, struct file *file)
 #else
 static void qc_v4l_close(struct video_device *dev)
@@ -2752,11 +2739,7 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 	struct video_device *dev = video_devdata(file);
 #endif
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
-	struct quickcam *qc = (struct quickcam *)video_get_drvdata(dev);
-#else
 	struct quickcam *qc = (struct quickcam *)dev->priv;
-#endif
 	if (qcdebug&QC_DEBUGLOGIC || qcdebug&QC_DEBUGUSER) PDEBUG("qc_v4l_close(dev=%p,qc=%p)",dev,qc);
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
@@ -2805,11 +2788,7 @@
 	struct video_device *dev = video_devdata(file);
 	int noblock = file->f_flags & O_NONBLOCK;
 #endif
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
-	struct quickcam *qc = (struct quickcam *)video_get_drvdata(dev);
-#else
 	struct quickcam *qc = (struct quickcam *)dev->priv;
-#endif
 	int frame_len;
 	unsigned char *frame;
 	long r = 0;
@@ -2866,11 +2845,7 @@
 	const void *start = (void *)vma->vm_start;
 	unsigned long size  = vma->vm_end - vma->vm_start;
 #endif
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
-	struct quickcam *qc = (struct quickcam *)video_get_drvdata(dev);
-#else
 	struct quickcam *qc = (struct quickcam *)dev->priv;
-#endif
 	unsigned char *frame;
 	int ret = 0,  frame_size;
 #if !HAVE_VMA && LINUX_VERSION_CODE<KERNEL_VERSION(2,6,0)
@@ -2891,9 +2866,7 @@
 }
 /* }}} */
 /* {{{ [fold] qc_v4l_ioctl(struct video_device *dev, unsigned int cmd, void *arg) */
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,30)
-static long qc_v4l_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
-#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 static int qc_v4l_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)
 #else
 static int qc_v4l_ioctl(struct video_device *dev, unsigned int cmd, void *argp)
@@ -2904,11 +2877,7 @@
 	struct video_device *dev = video_devdata(file);
 	void *argp = (void *)arg;
 #endif
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
-	struct quickcam *qc = (struct quickcam *)video_get_drvdata(dev);
-#else
 	struct quickcam *qc = (struct quickcam *)dev->priv;
-#endif
 	int i, retval = 0;
 
 	if (qcdebug&QC_DEBUGLOGIC || qcdebug&QC_DEBUGUSER) PDEBUG("qc_v4l_ioctl(dev=%p,cmd=%u,arg=%p,qc=%p)",dev,cmd,argp,qc);
@@ -2926,7 +2895,7 @@
 			if (qcdebug&QC_DEBUGUSER) PDEBUG("VIDIOCGCAP");
 			memset(&b, 0, sizeof(b));
 			strcpy(b.name, "Logitech QuickCam USB");	/* Max 31 characters */
-			b.type      = VID_TYPE_CAPTURE;
+			b.type      = qc->vdev.type;
 			b.channels  = 1;
 			b.audios    = 0;
 			b.maxwidth  = qc->sensor_data.maxwidth;
@@ -3501,7 +3470,7 @@
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 static void qc_v4l_release(struct video_device *vfd) { }
-static struct v4l2_file_operations qc_v4l_fops = {
+static struct file_operations qc_v4l_fops = {
 	owner:		THIS_MODULE,
 	open:		qc_v4l_open,
 	release:	qc_v4l_close,
@@ -3515,7 +3484,7 @@
 
 static struct video_device qc_v4l_template = {
 	name:		"QuickCam USB",
-	vfl_type:	VFL_TYPE_GRABBER,
+	type:		VID_TYPE_CAPTURE, // | VID_TYPE_SUBCAPTURE,
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
 	hardware:	VID_HARDWARE_QCAM_USB,
 #endif
@@ -3693,7 +3662,7 @@
 #endif
 	/* Register input device for button */
 	qc->input_ptr->name = "Quickcam snapshot button";
-	/*qc->input_ptr->private = qc;*/
+	qc->input_ptr->private = qc;
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24)
 	qc->input_ptr->evbit[0] = BIT_MASK(EV_KEY);
 	qc->input_ptr->keybit[BIT_WORD(BTN_0)] = BIT_MASK(BTN_0);
@@ -3707,12 +3676,8 @@
 	qc->input_ptr->id.vendor = qc->dev->descriptor.idVendor;
 	qc->input_ptr->id.product = qc->dev->descriptor.idProduct;
 	qc->input_ptr->id.version = qc->dev->descriptor.bcdDevice;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
-	r = input_register_device(qc->input_ptr);
-	CHECK_ERROR(r != 0, fail2b, "qc_int_init input_register_device failed %d", r);
-#else
 	input_register_device(qc->input_ptr);
-#endif
+
 	*qc->input_event_path = '\0';
 	usb_make_path(qc->dev, qc->input_physname, 56);
 	strcat(qc->input_physname, "/input0");
@@ -3771,11 +3736,7 @@
 
 		/* Register V4L video device */
 		memcpy(&qc->vdev, &qc_v4l_template, sizeof(qc_v4l_template));
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
-		video_set_drvdata(&(qc->vdev), qc);
-#else
 		qc->vdev.priv = qc;
-#endif
 
 		mb();
 		r = video_register_device(&qc->vdev, VFL_TYPE_GRABBER, video_nr);
diff -N -r -U 3 qc-usb-messenger-1.8/qc-memory.c qc-usb-messenger-1.8-orig/qc-memory.c
--- qc-usb-messenger-1.8/qc-memory.c	2010-07-16 14:51:54.000000000 +0300
+++ qc-usb-messenger-1.8-orig/qc-memory.c	2006-11-05 08:36:51.000000000 +0200
@@ -27,12 +27,7 @@
  */
 /* }}} */
 /* {{{ [fold] Includes */
-#include <linux/version.h>
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,33)
-#include <generated/autoconf.h>
-#else
 #include <linux/autoconf.h>
-#endif
 #include <linux/version.h>
 
 #ifdef CONFIG_SMP
@@ -54,9 +49,6 @@
 #include <asm/pgtable.h>	/* Required on Alpha */
 #include <linux/vmalloc.h>	/* Required on Alpha */
 #include <linux/pagemap.h>	/* pmd_offset requires this on SuSE supplied kernels */
-#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,29)
-#include <drivers/staging/comedi/wrapper.h>
-#endif
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)
 #include <linux/wrapper.h>	/* For proper mem_map_(un)reserve define, the compatibility define below might not work */
 #endif
diff -N -r -U 3 qc-usb-messenger-1.8/quickcam.h qc-usb-messenger-1.8-orig/quickcam.h
--- qc-usb-messenger-1.8/quickcam.h	2010-07-16 14:41:18.000000000 +0300
+++ qc-usb-messenger-1.8-orig/quickcam.h	2008-05-27 09:53:17.000000000 +0300
@@ -92,8 +92,8 @@
 
 #include <linux/version.h>
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
-#include <generated/autoconf.h>
-#elif LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)
+#include <linux/autoconf.h>
+#else
 #include <linux/config.h>
 #endif
 
@@ -242,7 +242,7 @@
 #if LINUX_VERSION_CODE<KERNEL_VERSION(2,4,20) || LINUX_VERSION_CODE>=KERNEL_VERSION(2,6,0)
 /* Things come and go... */
 /* Used only for debugging, so this could be actually removed if needed */
-#define sem_getcount(sem)	*(&(sem)->count)
+#define sem_getcount(sem)	atomic_read(&(sem)->count)
 #endif
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
